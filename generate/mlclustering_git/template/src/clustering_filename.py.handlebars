# -*- coding: utf-8 -*-
import logging
import labskit


from src.data_loading import sources_{{fileName}}
from src.analysis import model_{{fileName}}
from src.reporting import visualizations_{{fileName}}
from src.data_processing import transforms_{{fileName}}


@labskit.app
def example_project_clustering(settings, outputs):
    """
    Executes the the full data flow for an example clustering project.
    Uses a subset of the HMDA dataset for North Dakota in 2015.
    """
    logger = logging.getLogger(__name__)

    # Import the sample dataset
    sample_clustering_dataset = sources_{{fileName}}\
        .HmdaNdSmall(settings).data\
        .pipe(transforms_{{fileName}}.define_problem)\
        .pipe(transforms_{{fileName}}.clean_clustering_data)\

    # Fit a simple K-means clustering algorithm (K=2), and predict cluster
    # membership using the fitted model.
    predicted_dataset = model_{{fileName}}.train_predict_clustering_model(
        sample_clustering_dataset, 'originated')

    # Perform a simple principal components analysis (PC=2), on the test dataset and visualize
    # the predicted clusters by their principal components.
    figure = visualizations_{{fileName}}\
        .plot_pca_top_two(
            predicted_dataset,
            'originated_prediction')

    figure_file = outputs.project_file('cluster_affinity.png')
    # Save figure
    figure.savefig(figure_file)

    logger.info('Done! Resulting figure saved to {}'.format(figure_file))


if __name__ == '__main__':
    example_project_clustering()
